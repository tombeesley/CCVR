legend.key.size = unit(1,"cm"))
# Chunk 9: Exp1-stats
exp1_anova <- data_RT_ANOVA_CCVR03 %>%
aov_car(meanRT ~ Error(subj/(TT*targ_depth*epoch)), data = .)
sme_TT <- data_RT_ANOVA_CCVR03 %>%
group_by(subj, TT) %>%
summarise(subjRT = mean(meanRT)) %>%
group_by(TT) %>%
summarise(RT = round(mean(subjRT),1),
SD = round(sd(subjRT),1))
sme_targ_depth <- data_RT_ANOVA_CCVR03 %>%
group_by(subj, targ_depth) %>%
summarise(subjRT = mean(meanRT)) %>%
group_by(targ_depth) %>%
summarise(RT = round(mean(subjRT),1),
SD = round(sd(subjRT),1))
sme_TT_td <- data_RT_ANOVA_CCVR03 %>%
group_by(subj, TT, targ_depth) %>%
summarise(subjRT = mean(meanRT)) %>%
pivot_wider(names_from = TT, values_from = subjRT) %>%
transmute(subj, targ_depth, CC_effect = random - repeated) %>%
group_by(targ_depth) %>%
summarise(RT = round(mean(CC_effect),1),
SD = round(sd(CC_effect),1))
# CC effect overall
dataCC <- data_RT_ANOVA_CCVR03 %>%
group_by(subj, TT) %>%
summarise(RT = mean(meanRT)) %>%
mutate(TT = fct_relevel(TT, "random", "repeated"))
t_exp1_CC_all <- t.test(RT ~ TT, data = dataCC, paired = TRUE)
d_exp1_CC_all <- cohensD(data = dataCC, formula = RT ~ TT, method = "paired")
prop_positive_CC <- dataCC %>%
ungroup() %>%
pivot_wider(names_from = TT, values_from = RT) %>%
transmute(subj, CCeffect = random - repeated) %>% # proportion showing CC
summarise(nPos = 100*mean(CCeffect>0))
# CC effect near targets
dataCC <- data_RT_ANOVA_CCVR03 %>%
filter(targ_depth == "near") %>%
group_by(subj, TT) %>%
summarise(RT = mean(meanRT)) %>%
mutate(TT = fct_relevel(TT, "random", "repeated"))
t_exp1_CC_near <- t.test(RT ~ TT, data = dataCC, paired = TRUE)
d_exp1_CC_near <- cohensD(data = dataCC, formula = RT ~ TT, method = "paired")
# CC effect far targets
dataCC <- data_RT_ANOVA_CCVR03 %>%
filter(targ_depth == "far") %>%
group_by(subj, TT) %>%
summarise(RT = mean(meanRT)) %>%
mutate(TT = fct_relevel(TT, "random", "repeated"))
t_exp1_CC_far <- t.test(RT ~ TT, data = dataCC, paired = TRUE)
d_exp1_CC_far <- cohensD(data = dataCC, formula = RT ~ TT, method = "paired")
# Chunk 10: load-Exp-2-data
load("CCVR04_export.Rdata")
# Chunk 11: Exp2 RT figure
CCVR04_RT_avgs_figure +
labs(y = "Mean response time (ms)",
x = "Epoch (16 trials)") +
theme(text=element_text(size = 12, family="Calibri"),
axis.title.x = element_text(size = 14,
face = "bold",
margin = margin(t = 15)),
axis.title.y = element_text(size = 14,
face = "bold",
margin = margin(r = 15)),
legend.text = element_text(size = 12),
legend.key.size = unit(1,"cm")) +
scale_x_continuous(breaks = seq(1,31,4),
minor_breaks = seq(1,31,2))
# Chunk 12: Exp2 test figure
CCVR04_test_figure
# Chunk 13: Exp2 stats
exp2_anova <- CCVR04_data_RT_ANOVA %>%
aov_car(meanRT ~ condition + Error(subj/(TT*targ_depth*test)), data = .)
sme_TT <- CCVR04_data_RT_ANOVA %>%
group_by(subj, TT) %>%
summarise(subjRT = mean(meanRT)) %>%
group_by(TT) %>%
summarise(RT = round(mean(subjRT),1),
SD = round(sd(subjRT),1))
sme_targ_depth <- CCVR04_data_RT_ANOVA %>%
group_by(subj, targ_depth) %>%
summarise(subjRT = mean(meanRT)) %>%
group_by(targ_depth) %>%
summarise(RT = round(mean(subjRT),1),
SD = round(sd(subjRT),1))
sme_test <- CCVR04_data_RT_ANOVA %>%
group_by(subj, test) %>%
summarise(subjRT = mean(meanRT)) %>%
group_by(test) %>%
summarise(RT = round(mean(subjRT),1),
SD = round(sd(subjRT),1))
CCVR04_RT_test_diff_figure
test_diff_figure <-
test_diff %>%
group_by(targ_depth, test) %>%
summarise(RT = mean(CC_RT), SE = sd(CC_RT)/sqrt(n())) %>%
ggplot(aes(x = test, y = RT)) +
geom_errorbar(aes(ymin = RT-SE, ymax = RT+SE),
width = 0.1, size = .5, colour = "black") +
geom_line(aes(group = targ_depth), size = 1) +
geom_point(aes(fill = targ_depth),
size = 4, shape = 21, colour = "black", stroke = 1.5) +
scale_x_continuous(breaks = 1:3) +
scale_y_continuous(limits = c(-100, 300), breaks = seq(-100,300,50)) +
scale_fill_discrete(type = c("black", "white")) +
labs(x = "Test",
y = "Difference in RT (Random - Repeated)")
test_diff_figure
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
date_compiled_title = c("Output created on", date())
```
---
date: `r date_compiled_title`
---
# Chunk 2
library(tidyverse)
library(broom)
library(patchwork)
library(knitr)
library(kableExtra)
library(afex)
theme_set(theme_classic())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set wd to current file location
data <- read_csv("data_tidy_Exp2.csv") # read in the tidied data from the first analysis script.
dataAw <- filter(data, phase == 2) # separate out awareness data
dataMain <- data %>%
filter(phase == 1) %>% # main phase of the task
mutate(TT = if_else(set %in% c(1,2), "Repeated", "Random"), # recode "set" variable into 2 variables
targ_depth = if_else(set %in% c(1,3), "Near targets", "Far targets"),
epoch = ceiling(block/2)) %>%
select(exp:phase, epoch, block:set, TT, targ_depth, everything())
# Chunk 3
# a table of the demongraphic information across participants
data_demog <- dataMain %>%
group_by(subj) %>%
slice(1) %>% # take top row
ungroup() %>%
select(subj,age,gender,condition)
demog_summary <- data_demog %>%
summarise(n = n(),
mean_age = mean(age),
sd_age = sd(age),
males = sum(gender=="M"),
females = sum(gender=="F"),
non_binary = sum(!gender %in% c("M", "F")))
basic_resp_stats <- dataMain %>%
group_by(subj) %>%
summarise(mean_RT = mean(RT < 9999),
perc_Timeouts = sum(dist_to_T==-1),
mean_Extra_Resp = mean(num_additional_Rs),
perc_Rs_Over1 = sum(num_additional_Rs>0)/n(),
perc_Rs_Over2 = sum(num_additional_Rs>1)/n()) %>%
summarise_all(list(mean = mean, sd = sd)) %>%
select(-contains("subj"))
table_basic_resp_stats <- basic_resp_stats %>%
pivot_longer(cols = everything(), names_to = "stat") %>%
kable(digits = 2, col.names = c("","")) %>%
kable_styling(latex_options = "hold_position", position = "left")
# filter trials with more than 2 responses, timeouts,
# and outlier RTs
data_NO <- dataMain %>%
filter(num_additional_Rs<=1, dist_to_T>=0) %>%
group_by(subj) %>%
mutate(zRT = scale(RT)) %>%
filter(between(zRT,-2.5,2.5)) %>%
ungroup()
# what percentage of trials were removed for each participant?
perc_removed <- data_NO %>%
group_by(subj) %>%
summarise(perc = (1 - (n()/496))*100)
# compute normalised RT (norm_RT), for calculating w/s error bars (i.e., Cosin)
data_NO <- data_NO %>%
group_by(subj) %>% # within each experiment, and each subject
summarise(sub_MeanRT = mean(RT)) %>% # calculate the mean RT for the subject
mutate(sample_MeanRT = mean(sub_MeanRT)) %>% # the overall mean RT for the sample in that experiment
ungroup() %>% # ungroup the data, to allow for removal of variable
left_join(data_NO, by = "subj") %>% # join to the original data frame
mutate(norm_RT = RT - sub_MeanRT + sample_MeanRT) %>% # compute the normalised RT, from the RT, subject mean and sample mean
select(exp, subj, age:RT, norm_RT, everything(), -sub_MeanRT, -sample_MeanRT) # arrange the variables
# Chunk 4
# summarise the overall mean RT for each P
overall_RT_Means <- data_NO %>%
group_by(subj) %>%
summarise(meanRT = mean(RT)) %>%
mutate(z_meanRT = scale(meanRT))
outlier_meanRTs <- overall_RT_Means %>%
filter(!between(z_meanRT, -2.5, 2.5)) %>%
pull(subj) # Ps 27 and 60 seems to have unusually long mean RTs
# plot the boxplots of RT
RT_boxplot <- overall_RT_Means %>%
ggplot(aes(x = "meanRT", y = meanRT))+
geom_boxplot() +
geom_point() +
geom_text(aes(label = subj), hjust = 2, check_overlap = TRUE)
# remove the two outlier participants from the sample
data_NO <- filter(data_NO,!subj %in% outlier_meanRTs)
# Chunk 5
# main analysis of RT
data_NO <- data_NO %>%
mutate(TT = factor(TT, levels = c("Repeated", "Random")),
targ_depth = factor(targ_depth, levels = c("Near targets", "Far targets")))
legendLBLs <- c("Repeated Near T", "Random Near T", "Repeated Far T", "Random Far T")
RT_avgs_figure <-
data_NO %>%
group_by(condition, TT, targ_depth, epoch) %>%
summarise(meanRT = mean(RT), SE = sd(norm_RT)/sqrt(n())) %>%
mutate(condition = recode(condition, "distal_repeated" = "Distal condition", "proximal_repeated" = "Proximal condition")) %>%
complete(TT, targ_depth, epoch) %>% # add NA values where missing - ensures breaks in lines for plot
ggplot(aes(x = epoch, y = meanRT, group = interaction(TT, targ_depth))) +
geom_line() +
geom_errorbar(aes(ymin = meanRT-SE, ymax = meanRT+SE), width = 0.5, size = .5) +
geom_point(aes(fill = interaction(TT, targ_depth), shape = interaction(TT, targ_depth)), size = 2) +
facet_wrap(~condition, dir = "v", scales = "free") +
theme(strip.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(hjust = 0.05),
strip.background = element_blank(),
panel.spacing.y = unit(2, "lines")) +
scale_y_continuous(limits = c(1400, 3000), breaks = seq(1400,3000,200)) +
scale_x_continuous(breaks = seq(1,31,2)) +
scale_fill_manual(name  ="",
labels = legendLBLs,
values = c("black", "white", "black", "white")) +
scale_shape_manual(name = "",
labels = legendLBLs,
values = c(21,21,22,22)) +
labs(x = "Epoch of 2 blocks",
y = "Mean RT")
# print figure
RT_avgs_figure
# Chunk 6
data_NO_test <- data_NO %>%
mutate(test = case_when(epoch %in% 8:11 ~ 1,
epoch %in% 18:21 ~ 2,
epoch %in% 28:31 ~ 3)) %>%
filter(test > 0)
test_figure <- data_NO_test %>%
mutate(condition = recode(condition, "distal_repeated" = "Distal contingencies",
"proximal_repeated" = "Proximal contingencies")) %>%
group_by(condition, TT, targ_depth, test) %>%
summarise(meanRT = mean(RT), SE = sd(norm_RT)/sqrt(n())) %>%
ggplot(aes(x = test, y = meanRT, fill = TT)) +
geom_col(position = position_dodge(),
colour = "black",
size = 1) +
geom_errorbar(aes(ymin = meanRT, ymax = meanRT+SE),
width = 0.2, size = .5, position = position_dodge(width = 0.9)) +
scale_fill_manual(values = c("black", "white")) +
scale_y_continuous(breaks = seq(1400,2800,200)) +
coord_cartesian(ylim = c(1400,2800)) +
facet_wrap(vars(condition,targ_depth),
nrow = 2,
scales = "free",
labeller = labeller(.rows = label_value, .multi_line = FALSE)) +
theme(strip.text = element_text(size = 10, face = "bold"),
strip.text.x = element_text(hjust = 0.05),
strip.background = element_blank(),
panel.spacing.y = unit(2, "lines")) +
labs(x = "Test phase",
y = "Mean RT",
fill = "")
#print figure
test_figure
# Chunk 7
data_NO_test$subj <- as.factor(data_NO_test$subj)
data_RT_ANOVA <- data_NO_test %>%
group_by(condition, subj, TT, targ_depth, test) %>%
summarise(meanRT = mean(RT))
data_RT_ANOVA %>%
aov_car(meanRT ~ Error(subj/(test*TT*targ_depth)) + condition, data = .)
# Chunk 8
test_diff <-
data_NO_test %>%
group_by(subj, TT, targ_depth, test) %>%
summarise(meanRT = mean(RT)) %>%
pivot_wider(names_from = TT, values_from = meanRT) %>%
mutate(CC_RT = Random - Repeated)
test_diff_figure <-
test_diff %>%
group_by(targ_depth, test) %>%
summarise(RT = mean(CC_RT), SE = sd(CC_RT)/sqrt(n())) %>%
ggplot(aes(x = test, y = RT)) +
geom_errorbar(aes(ymin = RT-SE, ymax = RT+SE),
width = 0.1, size = .5, colour = "black") +
geom_line(aes(group = targ_depth), size = 1) +
geom_point(aes(fill = targ_depth),
size = 4, shape = 21, colour = "black", stroke = 1.5) +
scale_x_continuous(breaks = 1:3) +
scale_y_continuous(limits = c(-100, 300), breaks = seq(-100,300,50)) +
scale_fill_discrete(type = c("black", "white")) +
labs(x = "Test",
y = "Difference in RT (Random - Repeated)")
test_diff_figure
# t-test Test 1
test_diff %>%
filter(test == 1) %>%
{t.test(.$CC_RT ~ .$targ_depth)}
# t-test Test 2
test_diff %>%
filter(test == 2) %>%
{t.test(.$CC_RT ~ .$targ_depth)}
# t-test Test 3
test_diff %>%
filter(test == 3) %>%
{t.test(.$CC_RT ~ .$targ_depth)}
# create new variables with experiment specific names
CCVR04_demog_summary = demog_summary
CCVR04_basic_resp_stats = basic_resp_stats
CCVR04_perc_removed = perc_removed
CCVR04_overall_RT_Means = overall_RT_Means
CCVR04_RT_avgs_figure = RT_avgs_figure
CCVR04_test_figure = test_figure
CCVR04_data_RT_ANOVA = data_RT_ANOVA
CCVR04_data_RT_test_diff = test_diff
CCVR04_RT_test_diff_figure = test_diff_figure
#save these objects for manuscript
save(CCVR04_demog_summary = demog_summary,
CCVR04_basic_resp_stats = basic_resp_stats,
CCVR04_perc_removed = perc_removed,
CCVR04_overall_RT_Means = overall_RT_Means,
CCVR04_RT_avgs_figure = RT_avgs_figure,
CCVR04_test_figure = test_figure,
CCVR04_data_RT_ANOVA = data_RT_ANOVA,
CCVR04_data_RT_test_diff = test_diff,
CCVR04_RT_test_diff_figure = test_diff_figure,
file = "../../CCVR_ms_1/CCVR04_export.Rdata")
test_diff_figure <-
test_diff %>%
group_by(targ_depth, test) %>%
summarise(RT = mean(CC_RT), SE = sd(CC_RT)/sqrt(n())) %>%
ggplot(aes(x = test, y = RT)) +
geom_errorbar(aes(ymin = RT-SE, ymax = RT+SE),
width = 0.1, size = .5, colour = "black") +
geom_line(aes(group = targ_depth), size = 1) +
geom_point(aes(fill = targ_depth),
size = 4, shape = 21, colour = "black", stroke = 1.5) +
scale_x_continuous(breaks = 1:3) +
scale_y_continuous(limits = c(-100, 300), breaks = seq(-100,300,50)) +
scale_fill_discrete(type = c("black", "white")) +
labs(x = "Test",
y = "Difference in RT (Random - Repeated)",
fill = "")
test_diff_figure
# t-test Test 1
test_diff %>%
filter(test == 1) %>%
{t.test(.$CC_RT ~ .$targ_depth)}
# t-test Test 2
test_diff %>%
filter(test == 2) %>%
{t.test(.$CC_RT ~ .$targ_depth)}
# t-test Test 3
test_diff %>%
filter(test == 3) %>%
{t.test(.$CC_RT ~ .$targ_depth)}
# create new variables with experiment specific names
CCVR04_demog_summary = demog_summary
CCVR04_basic_resp_stats = basic_resp_stats
CCVR04_perc_removed = perc_removed
CCVR04_overall_RT_Means = overall_RT_Means
CCVR04_RT_avgs_figure = RT_avgs_figure
CCVR04_test_figure = test_figure
CCVR04_data_RT_ANOVA = data_RT_ANOVA
CCVR04_data_RT_test_diff = test_diff
CCVR04_RT_test_diff_figure = test_diff_figure
#save these objects for manuscript
save(CCVR04_demog_summary = demog_summary,
CCVR04_basic_resp_stats = basic_resp_stats,
CCVR04_perc_removed = perc_removed,
CCVR04_overall_RT_Means = overall_RT_Means,
CCVR04_RT_avgs_figure = RT_avgs_figure,
CCVR04_test_figure = test_figure,
CCVR04_data_RT_ANOVA = data_RT_ANOVA,
CCVR04_data_RT_test_diff = test_diff,
CCVR04_RT_test_diff_figure = test_diff_figure,
file = "../../CCVR_ms_1/CCVR04_export.Rdata")
# t-test Test 1
data_CC <-
CCVR_data_RT_test_diff %>%
filter(test == 1)
# t-test Test 1
data_CC <-
CCVR04_data_RT_test_diff %>%
filter(test == 1)
data_CC
t_test_T1 <- t.test(CC_RT ~ targ_depth, data = dataCC, paired = TRUE)
t_test_T1 <- t.test(CC_RT ~ targ_depth, data = data_CC, paired = TRUE)
t_test_T1
t_exp1_CC_T1 <- t.test(CC_RT ~ targ_depth, data = data_CC, paired = TRUE)
d_exp1_CC_T1 <- cohensD(data = data_CC, formula = CC_RT ~ targ_depth, method = "paired")
data_CC <-
CCVR04_data_RT_test_diff %>%
filter(test == 1)
t_exp1_CC_T1 <- t.test(CC_RT ~ targ_depth, data = data_CC, paired = TRUE)
d_exp1_CC_T1 <- cohensD(data = data_CC, formula = CC_RT ~ targ_depth, method = "paired")
# t-test Test 2
data_CC <-
CCVR04_data_RT_test_diff %>%
filter(test == 2)
t_exp1_CC_T2 <- t.test(CC_RT ~ targ_depth, data = data_CC, paired = TRUE)
d_exp1_CC_T2 <- cohensD(data = data_CC, formula = CC_RT ~ targ_depth, method = "paired")
# t-test Test 3
data_CC <-
CCVR04_data_RT_test_diff %>%
filter(test == 3)
t_exp1_CC_T3 <- t.test(CC_RT ~ targ_depth, data = data_CC, paired = TRUE)
d_exp1_CC_T3 <- cohensD(data = data_CC, formula = CC_RT ~ targ_depth, method = "paired")
t_exp1_CC_T3
t_exp1_CC_T2
apa(t_exp1_CC_T2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set wd to current file location
# Chunk 1: knitr-options
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = FALSE, dev = "cairo_pdf")
library(tidyverse)
library(citr)
library(papaja)
library(english)
library(extrafont)
library(afex)
library(apa)
library(pwr) # power calculations
library(lsr) # effect size estimate
library(skimr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set wd to current file location
theme_set(theme_classic())
r_refs("references.bib")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set wd to current file location
CCVR04_demog_summary$n
CCVR04_demog_summary$females
library(tidyverse)
library(citr)
library(papaja)
library(english)
library(extrafont)
library(afex)
library(apa)
library(pwr) # power calculations
library(lsr) # effect size estimate
library(skimr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set wd to current file location
theme_set(theme_classic())
r_refs("references.bib")
install.packages("tinytex")
install.packages("Rtools")
install.packages("tinytex")
install.packages("devtools")
library(devtools)
install.packages("sessionInfo")
install.packages("sessioninfo")
library(devtools)
devtools::find_rtools()
writeLines(
'PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"',
con = file("~/.Renviron", open = "a")
)
install.packages("sessioninfo")
install.packages("sessioninfo")
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
Sys.which("make")
Sys.getenv("PATH")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.which("make")
install.packages("jsonlite", type = "source")
install.packages("sessioninfo")
install.packages("tinytex")
install.packages("rmarkdown")
install.packages(c("fansi", "Matrix", "matrixStats", "mgcv", "remotes", "stringi"))
library(rmarkdown)
install.packages("evaluate")
library(rmarkdown)
install.packages("stringr")
install.packages("papaja")
library(devtools)
install_github("crsh/papaja")
install.packages("tidyverse")
install.packages("pkgconfig")
install.packages("assertthat")
install.packages("gtable")
install.packages("munsell")
install.packages("base64enc")
install.packages("papaja", dependencies = TRUE)
install.packages("papaja", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
install.packages("readxl")
install.packages("cellranger")
install.packages("citr")
library(citr)
install_github("crsh/citr")
library(devtools)
install_github("crsh/citr")
install.packages("xtable")
install_github("crsh/citr")
library(abind)
install.packages("lme4")
install.packages("lme4", dependencies = TRUE)
install.packages("minqa")
install.packages("anovaBF")
install.packages("BayesFactor")
setwd("C:/Users/beesleyt/OneDrive - Lancaster University/Desktop PC/Projects/CC depth VR/CCVR_ms_1")
install.packages("rstudioapi")
install.packages("rstudioapi")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getActiveDocumentContext()$path
library(rstudioapi)
getActiveDocumentContext()$path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set wd to current file location
tinytex::reinstall_tinytex()
